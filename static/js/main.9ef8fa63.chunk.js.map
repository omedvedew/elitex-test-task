{"version":3,"sources":["App/Header/Logo/Logo.js","App/Header/Header.js","App/Main/AddMoviePage.js","App/Main/movies.js","App/Main/MoviesListItem.js","App/Main/MoviesList.js","App/Main/Main.js","App/App.js","index.js"],"names":["Logo","scrollUp","onClick","to","className","style","backgroundImage","Header","AddMoviePage","newMovie","handleNewMovieTitle","handleNewMovieImage","handleNewMovieDescription","onSend","onSubmit","type","placeholder","value","title","onChange","image","description","isDataEntered","console","log","movies","id","MoviesListItem","this","props","Component","defaultProps","MoviesList","map","Main","path","exact","component","render","App","state","e","setState","prevState","target","preventDefault","newMovieItem","length","push","window","scrollTo","top","behavior","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9ef8fa63.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Logo = ({\r\n    scrollUp,\r\n}) => {\r\n    return (\r\n        <Link onClick={scrollUp} to=\"/elitex-test-task/\" className=\"header__logo\" style={{backgroundImage: 'url(/images/movies-lib-logo.png)'}}></Link>   \r\n    )\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Logo from './Logo/Logo';\r\n\r\nconst Header = ({\r\n    scrollUp,\r\n}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <Logo\r\n                scrollUp={scrollUp}\r\n            />\r\n            <Link onClick={scrollUp} to=\"/elitex-test-task/add-movie-page\" className=\"header__add-btn\">Add new</Link>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddMoviePage = ({\r\n    newMovie,\r\n    handleNewMovieTitle,\r\n    handleNewMovieImage,\r\n    handleNewMovieDescription,\r\n    onSend,\r\n    scrollUp,\r\n}) => {\r\n    const renderMessage = () => {\r\n        return (\r\n            <div className=\"main__add-movie-page__message\">\r\n                <p>Thanks for adding a new movie. You will find it in <Link to=\"/elitex-test-task/\" onClick={scrollUp}>movies list page</Link>. If needed you can add as much, as you want. Try it up!</p>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"main__add-movie-page\">\r\n            <form className=\"main__add-movie-page__form\" onSubmit={onSend}>\r\n                <h2 className=\"m-a-f_title\">Add new movie here!</h2>\r\n                <div className=\"m-a-f__input-box\">\r\n                    <h3 className=\"m-a-f__input-box_title\">Movie title</h3>\r\n                    <input className=\"m-a-f__input-box_input\" type=\"text\" placeholder=\"Enter movie title\" value={newMovie.title} onChange={handleNewMovieTitle}/>\r\n                </div>\r\n                <div className=\"m-a-f__input-box\">\r\n                    <h3 className=\"m-a-f__input-box_title\">Movie image url</h3>\r\n                    <input className=\"m-a-f__input-box_input\" type=\"text\" placeholder=\"Enter movie image url\" value={newMovie.image} onChange={handleNewMovieImage}/>\r\n                </div>\r\n                <div className=\"m-a-f__input-box\">\r\n                    <h3 className=\"m-a-f__input-box_title\">Movie description</h3>\r\n                    <input className=\"m-a-f__input-box_input\" type=\"text\" placeholder=\"Enter movie description\" value={newMovie.description} onChange={handleNewMovieDescription}/>\r\n                </div>\r\n                <button className=\"m-a-f__input-box_submit-btn\" type=\"submit\">Submit</button>\r\n            </form>\r\n            {\r\n                newMovie.isDataEntered !== false ? renderMessage() : console.log(\"new movie data is not entered\")\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddMoviePage;","const movies = [\r\n    {\r\n        id: 1,\r\n        title: 'Lord of the Rings: The Fellowship of the Ring',\r\n        // description: 'First part of famous trilogy \"The Lord Of The Rings\"',\r\n        // image: \"\",\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Lord of the Rings: The Two Towers',\r\n        description: 'Second part of famous trilogy \"The Lord Of The Rings\"',\r\n        image: '/images/two-towers.jpg',\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Lord of the Rings: Return of the King',\r\n        description: 'Third part of famous trilogy \"The Lord Of The Rings\"',\r\n        image: '/images/return-of-the-king.jpg',\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Angels and Demons',\r\n        description: 'First part of famous novel and movie series narrating the story about Robert Langdon`s adventures',\r\n        image: '/images/angels-and-demons.jpg',\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'The Da Vinci Code',\r\n        description: 'Second part of famous novel and movie series narrating the story about Robert Langdon`s adventures',\r\n        image: '/images/da-vinci-code.jpg',\r\n    },\r\n];\r\n\r\nexport default movies;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MoviesListItem extends Component {\r\n    render () {\r\n\r\n        const {\r\n            title,\r\n            image,\r\n            description,\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <h2 className=\"m-m-i_title\">{title}</h2>\r\n                <div className=\"m-m-i_image\" style={{backgroundImage: `url(${image})`}}></div>\r\n                <p className=\"m-m-i_description\">{description}</p>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nMoviesListItem.propTypes = {\r\n    title: PropTypes.string,\r\n    image: PropTypes.string,\r\n    description: PropTypes.string,\r\n};\r\n\r\nMoviesListItem.defaultProps = {\r\n    title: 'No movie title',\r\n    image: '/images/movies-lib-logo.png',\r\n    description: 'No description',\r\n};\r\n\r\nexport default MoviesListItem;","import React from 'react';\r\nimport movies from './movies';\r\nimport MoviesListItem from './MoviesListItem';\r\n\r\nconst MoviesList = () => {\r\n    return (\r\n        <div className=\"main__movies-list\">\r\n            {\r\n                movies.map(({id, title, image, description}) => (\r\n                    <div className=\"main__movies-list__item\" key={id}>\r\n                        <MoviesListItem\r\n                            title={title}\r\n                            image={image}\r\n                            description={description}\r\n                        />\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MoviesList;","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport AddMoviePage from './AddMoviePage';\r\nimport MoviesList from './MoviesList';\r\n\r\nconst Main = ({\r\n    newMovie,\r\n    handleNewMovieTitle,\r\n    handleNewMovieImage,\r\n    handleNewMovieDescription,\r\n    onSend,\r\n    scrollUp,\r\n}) => {\r\n    return (\r\n        <main className=\"main\">\r\n            <Route path=\"/elitex-test-task\" exact component={MoviesList}/>\r\n            <Route path=\"/elitex-test-task/add-movie-page\" render={() => \r\n                <AddMoviePage\r\n                    newMovie={newMovie}\r\n                    handleNewMovieTitle={handleNewMovieTitle}\r\n                    handleNewMovieImage={handleNewMovieImage}\r\n                    handleNewMovieDescription={handleNewMovieDescription}\r\n                    onSend={onSend}\r\n                    scrollUp={scrollUp}\r\n                />\r\n            }/>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Main;","import React, { Component } from 'react';\n\nimport '../common/styles/style.css';\n\nimport Header from './Header/Header';\nimport Main from './Main/Main';\nimport movies from './Main/movies';\n\nclass App extends Component {\n\n  state = {\n    newMovie: {\n      title: '',\n      image: '',\n      description: '',\n      isDataEntered: false,\n    },\n  };\n\n  handleNewMovieTitle = (e) => {\n    this.setState((prevState) => ({\n      newMovie: {\n        ...prevState.newMovie,\n        title: e.target.value,\n      }\n    }));\n  };\n\n  handleNewMovieImage = (e) => {\n    this.setState((prevState) => ({\n      newMovie: {\n        ...prevState.newMovie,\n        image: e.target.value,\n      }\n    })); \n  };\n\n  handleNewMovieDescription = (e) => {\n    this.setState((prevState) => ({\n      newMovie: {\n        ...prevState.newMovie,\n        description: e.target.value,\n      }\n    }));\n  };\n\n  onSend = (e) => {\n    e.preventDefault();\n    let newMovieItem = {};\n\n    if (this.state.newMovie.title !== '') {\n      newMovieItem.title = this.state.newMovie.title\n    }\n\n    if (this.state.newMovie.image !== '') {\n      newMovieItem.image = this.state.newMovie.image\n    }\n\n    if (this.state.newMovie.description !== '') {\n      newMovieItem.description = this.state.newMovie.description\n    }\n\n    newMovieItem.id = movies.length + 1;\n    movies.push(newMovieItem);\n    console.log(movies);\n\n    this.setState(() => ({\n      newMovie: {\n        title: '',\n        image: '',\n        description: '',\n        isDataEntered: true,\n      }\n    }));\n  };\n\n  scrollUp = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  render () {    \n    console.log(this.state.newMovie);\n    return (\n      <>\n        <Header\n          scrollUp={this.scrollUp}\n        />\n        <Main\n          newMovie={this.state.newMovie}\n          handleNewMovieTitle={this.handleNewMovieTitle}\n          handleNewMovieImage={this.handleNewMovieImage}\n          handleNewMovieDescription={this.handleNewMovieDescription}\n          onSend={this.onSend}\n          scrollUp={this.scrollUp}\n        />\n      </>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}